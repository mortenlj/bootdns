name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: [ push ]

env:
  cache_image: ghcr.io/${{ github.repository }}/cache:cache

permissions:
  contents: read
  packages: write

jobs:
  set-version:
    name: Set variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: "Set version"
        id: constants
        run: |
          export version="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "version=${version}" >> ${GITHUB_OUTPUT}
    outputs:
      version: "${{ steps.constants.outputs.version }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: set-version
    env:
      version: "${{ needs.set-version.outputs.version }}"
    steps:
      - uses: earthly/actions-setup@v1
        with:
          version: "latest" # or pin to an specific version, e.g. "v0.6.10"
      - uses: actions/checkout@v3
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and possibly push
        env:
          EARTHLY_PUSH: "${{ github.ref == 'refs/heads/main' }}"
        run: |
          earthly --verbose --allow-privileged --ci --output "--remote-cache=${cache_image}" +build "--version=${version}"
      - name: Save executables for release
        uses: actions/upload-artifact@v3
        with:
          name: executables
          path: target/bootdns.*
          if-no-files-found: error
  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - set-version
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ needs.set-version.outputs.version }}"
          release_name: Release "${{ needs.set-version.outputs.version }}"
          draft: false
          prerelease: false

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: executables
          path: ./executables/

      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: './executables/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: "${{ needs.set-version.outputs.version }}"
